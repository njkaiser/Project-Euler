// Even Fibonacci Numbers
// Problem 2

// Each new term in the Fibonacci sequence is generated by
// adding the previous two terms. By starting with 1 and 2,
// the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose
// values do not exceed four million, find the sum of the
// even-valued terms.

#include <iostream>
#include <iomanip>

int main ()
{
  long long n1 = 1;
  long long n2 = 2;
  long long fib = 0; // need to assign to 0, in case value > 4000000
  long long sum = n2; // only n2, since n1 is an odd number

  while(fib < 4000000)
  {
    fib = n1 + n2;
    n1 = n2;
    n2 = fib;
    if(!(fib % 2))
    {
      sum += fib;
      std::cout << std::right << std::setw(20) << fib << std::endl;
    }
  }
  std::cout << "____________________" << std::endl;
  std::cout << std::right << std::setw(20) << sum << std::endl;

  return 0;
}
